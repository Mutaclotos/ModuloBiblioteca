package biblioteca.modulovisitas;

import java.sql.ResultSet;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;

public class prestamosActuales extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private Table tablaDePrestamos;
	@AutoGenerated
	private Label etiquetaNombreBiblio;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */

	private final DBConnector dbc;
	
	private MyUI ui;

	public prestamosActuales()  {
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
		dbc = new DBConnector("localhost","Mutaclotos","we105769");
		ui = new MyUI();
		
		
		tablaDePrestamos.addContainerProperty("Documento", String.class, null);
		tablaDePrestamos.addContainerProperty("Fecha de solicitud", String.class, null);
		tablaDePrestamos.addContainerProperty("Fecha de caducidad", String.class, null);
		tablaDePrestamos.addContainerProperty("Estado de solicitud", String.class, null);
		int i=0;///////////////////////////////////////////////////////////////////////////////////////////////////
		
		
		ResultSet rs = dbc.query("SELECT p.Documento, p.fechaSolicitud, p.fechaCaducidad, p.estado from Prestamo p , Usuario u where p.usuario=u.cedula group by  p.Documento ;" );//añadir condicion de la cedula del usuario actual"
		
		
		
		
		
		try{	
		//TODO: datasource de resultSet, tableQuery	
			while(rs.next())
			{
				Integer itemId = new Integer(i);
				
				String documento = rs.getString("Documento"); 
				String fechaSolicitud = rs.getString("fechaSolicitud");
				String fechaCaducidad = rs.getString("fechaCaducidad");
				String estado = rs.getString("estado");

				tablaDePrestamos.addItem(new Object[]{documento,fechaSolicitud,fechaCaducidad,estado}, itemId);
				
				i++;
				//System.out.println(nombreDocu);
				//System.out.println(fechaRetiro);
			}
					
		
		}catch(Exception sqe){
			System.out.println("faillllll");
		}
		

		tablaDePrestamos.setPageLength(tablaDePrestamos.size());
		tablaDePrestamos.setSelectable(true);
		tablaDePrestamos.setImmediate(true);
		tablaDePrestamos.setColumnCollapsingAllowed(true);
		
		
		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// etiquetaNombreBiblio
		etiquetaNombreBiblio = new Label();
		etiquetaNombreBiblio.setImmediate(false);
		etiquetaNombreBiblio.setWidth("280px");
		etiquetaNombreBiblio.setHeight("40px");
		etiquetaNombreBiblio.setValue("Bibioteca Francisco Echeverria Garcìa");
		mainLayout.addComponent(etiquetaNombreBiblio, "top:20.0px;left:100.0px;");
		
		// tablaDePrestamos
		tablaDePrestamos = new Table();
		tablaDePrestamos.setImmediate(false);
		tablaDePrestamos.setWidth("90.0%");
		tablaDePrestamos.setHeight("-1px");
		mainLayout.addComponent(tablaDePrestamos, "top:120.0px;left:260.0px;");
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("100.0%");
		label_2.setHeight("38px");
		label_2.setValue("Prestamos Actuales");
		mainLayout.addComponent(label_2, "top:62.0px;right:-48.0px;left:560.0px;");
		
		return mainLayout;
	}

}
