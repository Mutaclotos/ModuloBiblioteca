package biblioteca.modulovisitas;

import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;

public class formularioBVirtualBusqueda extends CustomComponent {
	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private TextArea inputDescriptor;

	@AutoGenerated
	private AbsoluteLayout resultado;

	@AutoGenerated
	private Label label_tipo;

	@AutoGenerated
	private CheckBox checkBoxSi;

	@AutoGenerated
	private Label labelReferencia;

	@AutoGenerated
	private Button botonBuscar;

	@AutoGenerated
	private Label labelFechaHora;

	@AutoGenerated
	private Label labelDescriptores;

	@AutoGenerated
	private ComboBox inputTipo;

	@AutoGenerated
	private TextField inputTitulo;

	@AutoGenerated
	private TextField inputAutor;

	@AutoGenerated
	private Label label_Titu;

	@AutoGenerated
	private Label labelAutor;

	@AutoGenerated
	private Label labelSignatura;

	@AutoGenerated
	private TextField inputSignatura;

	@AutoGenerated
	private Label labelBusqueda;

	public static final long serialVersionUID = 1202;
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private DBConnector dbc;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public formularioBVirtualBusqueda() {
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		//dbc = new DBConnector("192.168.56.101","root","GESAVA954");
		
		String timeStamp = new SimpleDateFormat("dd/MM/YYYY HH:mm").format(Calendar.getInstance().getTime());
		labelFechaHora.setValue(timeStamp);
		
		this.inputTipo.setContainerDataSource(Contenedor.obtenerContenedorTipoDocumento());
		
		botonBuscar.addClickListener(new ClickListener(){
			private static final long serialVersionUID = 47254532L;
			@Override
			public void buttonClick(ClickEvent event) {
				String signatura = inputSignatura.getValue().length()==0 ? null : inputSignatura.getValue();
				String[] autores = inputAutor.getValue().length()==0 ? null : inputAutor.getValue().split(",");
				String[] descriptores = inputDescriptor.getValue().length()==0 ? null : inputDescriptor.getValue().split(",");
				String tipo = inputTipo.getValue()==null ? null : inputTipo.getValue().toString(); 
				String titulo = inputTitulo.getValue().length()==0 ? null : inputTitulo.getValue();
				String incluir = checkBoxSi.getValue() ? "" : " AND archivo is not null ";
				
				String sql = "select GROUP_CONCAT( concat(',', a.nombre )) as Autores ,d.titulo as Titulo, d.signatura as Signatura,d.tipoDocumento as Tipo, GROUP_CONCAT( concat(',', de.descriptor )) as Descriptores FROM documentoautor da right outer join documento d on d.signatura= da.documento left outer join  autor a on a.id=da.autor left outer join descriptor de on de.signatura=d.signatura WHERE 1=1";
				sql += incluir; 
				if(signatura!=null){
					sql += " AND d.signatura='"+signatura+"'";
				}
				if(autores!=null && autores.length>0){
					sql += " AND (  a.nombre LIKE '%"+autores[0]+"%'";
					for(int i=1;i<autores.length;++i){
						sql += " OR a.nombre LIKE '%"+autores[i]+"%'";
					}
					sql += ")";
				}
				if(descriptores!=null && descriptores.length>0){
					sql += " AND ( de.descriptor LIKE '%"+descriptores[0]+"%'";
					for(int i=1;i<descriptores.length;++i){
						sql += " OR de.descriptor LIKE '%"+descriptores[i]+"%'";
					}
					sql += ")";
				}
				if(tipo!=null){
					sql += " AND d.tipoDocumento='"+tipo+"'";
				}
				if(titulo!=null){
					sql += " AND d.titulo LIKE '%"+titulo+"%'";
				}
					
				sql += " GROUP BY d.signatura";
				System.out.println(sql);
				resultado.removeAllComponents();
				resultado.addComponent(new formularioBVirtualResultados(sql));
			}
		});
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("700px");
		mainLayout.setHeight("800px");
		
		// top-level component properties
		setWidth("700px");
		setHeight("800px");
		
		// labelBusqueda
		labelBusqueda = new Label();
		labelBusqueda.setImmediate(false);
		labelBusqueda.setWidth("195px");
		labelBusqueda.setHeight("-1px");
		labelBusqueda.setValue("Busqueda de Documentos");
		mainLayout.addComponent(labelBusqueda, "top:40.0px;left:220.0px;");
		
		// inputSignatura
		inputSignatura = new TextField();
		inputSignatura.setImmediate(false);
		inputSignatura.setWidth("-1px");
		inputSignatura.setHeight("-1px");
		mainLayout.addComponent(inputSignatura, "top:96.0px;left:149.0px;");
		
		// labelSignatura
		labelSignatura = new Label();
		labelSignatura.setImmediate(false);
		labelSignatura.setWidth("-1px");
		labelSignatura.setHeight("-1px");
		labelSignatura.setValue("Signatura");
		mainLayout.addComponent(labelSignatura, "top:102.0px;left:21.0px;");
		
		// labelAutor
		labelAutor = new Label();
		labelAutor.setImmediate(false);
		labelAutor.setWidth("-1px");
		labelAutor.setHeight("-1px");
		labelAutor.setValue("Autor");
		mainLayout.addComponent(labelAutor, "top:142.0px;left:26.0px;");
		
		// label_Titu
		label_Titu = new Label();
		label_Titu.setImmediate(false);
		label_Titu.setWidth("-1px");
		label_Titu.setHeight("-1px");
		label_Titu.setValue("Titulo");
		mainLayout.addComponent(label_Titu, "top:182.0px;left:26.0px;");
		
		// inputAutor
		inputAutor = new TextField();
		inputAutor.setImmediate(false);
		inputAutor.setWidth("-1px");
		inputAutor.setHeight("-1px");
		mainLayout.addComponent(inputAutor, "top:136.0px;left:149.0px;");
		
		// inputTitulo
		inputTitulo = new TextField();
		inputTitulo.setImmediate(false);
		inputTitulo.setWidth("-1px");
		inputTitulo.setHeight("-1px");
		mainLayout.addComponent(inputTitulo, "top:176.0px;left:149.0px;");
		
		// inputTipo
		inputTipo = new ComboBox();
		inputTipo.setImmediate(false);
		inputTipo.setWidth("141px");
		inputTipo.setHeight("25px");
		mainLayout.addComponent(inputTipo, "top:95.0px;left:459.0px;");
		
		// labelDescriptores
		labelDescriptores = new Label();
		labelDescriptores.setImmediate(false);
		labelDescriptores.setWidth("-1px");
		labelDescriptores.setHeight("-1px");
		labelDescriptores.setValue("Descriptores");
		mainLayout.addComponent(labelDescriptores, "top:222.0px;left:20.0px;");
		
		// labelFechaHora
		labelFechaHora = new Label();
		labelFechaHora.setImmediate(false);
		labelFechaHora.setWidth("-1px");
		labelFechaHora.setHeight("-1px");
		labelFechaHora.setValue("1/6/2016  14:21");
		mainLayout.addComponent(labelFechaHora, "top:20.0px;left:480.0px;");
		
		// botonBuscar
		botonBuscar = new Button();
		botonBuscar.setCaption("BUSCAR");
		botonBuscar.setImmediate(true);
		botonBuscar.setWidth("200px");
		botonBuscar.setHeight("25px");
		mainLayout.addComponent(botonBuscar, "top:224.0px;left:401.0px;");
		
		// labelReferencia
		labelReferencia = new Label();
		labelReferencia.setImmediate(false);
		labelReferencia.setWidth("-1px");
		labelReferencia.setHeight("-1px");
		labelReferencia.setValue("Incluir Referencia");
		mainLayout.addComponent(labelReferencia, "top:140.0px;left:401.0px;");
		
		// checkBoxSi
		checkBoxSi = new CheckBox();
		checkBoxSi.setCaption("SI");
		checkBoxSi.setImmediate(false);
		checkBoxSi.setWidth("-1px");
		checkBoxSi.setHeight("-1px");
		mainLayout.addComponent(checkBoxSi, "top:142.0px;left:546.0px;");
		
		// label_tipo
		label_tipo = new Label();
		label_tipo.setImmediate(false);
		label_tipo.setWidth("-1px");
		label_tipo.setHeight("-1px");
		label_tipo.setValue("Tipo");
		mainLayout.addComponent(label_tipo, "top:102.0px;left:401.0px;");
		
		// resultado
		resultado = new AbsoluteLayout();
		resultado.setImmediate(false);
		resultado.setWidth("100.0%");
		resultado.setHeight("500px");
		mainLayout.addComponent(resultado, "top:360.0px;left:0.0px;");
		
		// inputDescriptor
		inputDescriptor = new TextArea();
		inputDescriptor.setImmediate(false);
		inputDescriptor.setWidth("-1px");
		inputDescriptor.setHeight("-1px");
		mainLayout.addComponent(inputDescriptor, "top:224.0px;left:148.0px;");
		
		return mainLayout;
	}

}
//select a.nombre,d.titulo, d.signatura,d.tipoDocumento FROM documentoautor da right outer join documento d on d.signatura= da.documento left outer join  autor a on a.id=da.autor left outer join descriptor de on de.signatura=d.signatura

