package biblioteca.modulovisitas;

import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;

public class formularioEditarConsulta extends CustomComponent implements View
{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Button botonCancelar;

	@AutoGenerated
	private CheckBox checkBoxConsultaCompletada;

	@AutoGenerated
	private TextField inputFechaEmision;

	@AutoGenerated
	private Label labelFechaEmision;

	@AutoGenerated
	private CheckBox checkBoxOTRAS;

	@AutoGenerated
	private CheckBox checkBoxDIALNET;

	@AutoGenerated
	private CheckBox checkBoxSCIJ;

	@AutoGenerated
	private CheckBox checkBoxOPAC;

	@AutoGenerated
	private CheckBox checkBoxMASTERLEX;

	@AutoGenerated
	private CheckBox checkBoxCIJUL;

	@AutoGenerated
	private CheckBox checkBoxCRIJA;

	@AutoGenerated
	private TextField inputTema;

	@AutoGenerated
	private Label labelBasesDatos;

	@AutoGenerated
	private Label labelTema;

	@AutoGenerated
	private Label labelFechaEntrega;

	@AutoGenerated
	private TextField inputObservaciones;

	@AutoGenerated
	private Label labelObservaciones;

	@AutoGenerated
	private Label labelSoy;

	@AutoGenerated
	private Button botonGuardar;

	@AutoGenerated
	private Label labelFechaHora;

	@AutoGenerated
	private Label labelEMail;

	@AutoGenerated
	private TextField inputEmail;

	@AutoGenerated
	private TextField inputInstitucion;

	@AutoGenerated
	private Label labelInstitucion;

	@AutoGenerated
	private ComboBox inputTipoConsulta;

	@AutoGenerated
	private ComboBox inputSoy;

	@AutoGenerated
	private TextField inputTelefono;

	@AutoGenerated
	private TextField inputCarne;

	@AutoGenerated
	private Label labelTipoConsulta;

	@AutoGenerated
	private Label labelCarne;

	@AutoGenerated
	private TextField inputCedula;

	@AutoGenerated
	private Label labelCedula;

	@AutoGenerated
	private TextField inputApellidos;

	@AutoGenerated
	private Label labelTelefono;

	@AutoGenerated
	private Label labelApellidos;

	@AutoGenerated
	private Label labelNombre;

	@AutoGenerated
	private TextField inputNombre;

	@AutoGenerated
	private Label labelTitulo;

	public static final long serialVersionUID = 1202;
	
	private String timeStamp;

	private final DBConnector dbc;
	
	private String IDConsulta;
	
	public static final String EDITVIEW = "edit";
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public formularioEditarConsulta(String idConsulta, String fechaEmision, String nombre, String apellidos,
	String cedula, String carne, String email, String telefono, String institucion, String tipoUsuario, String tema,
	String tipoConsulta, String observaciones, String basesDatos) 
	{
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		dbc = new DBConnector("localhost","Mutaclotos","we105769");

		timeStamp = new SimpleDateFormat("dd/MM/YYYY HH:mm").format(Calendar.getInstance().getTime());
		labelFechaHora.setValue(timeStamp);
		
		IDConsulta = idConsulta;
		
		//FocusListener para verificar validez de campo modificado
		/*FocusListener fl = new FocusListener(){
			@Override
			public void focus(FocusEvent event) {
				inputFechaEntrega.isValid();
			}
		};*/
		
		
		//inputFechaEntrega.addFocusListener(fl);
		//botonGuardar.addFocusListener(fl);
		
		//Se insertan los valores de la fila de la tabla de consultas en su campo respectivo
		inputNombre.setValue(nombre);
		inputFechaEmision.setValue(fechaEmision);
		inputApellidos.setValue(apellidos);
		inputCarne.setValue(carne);
		inputCedula.setValue(cedula);
		inputEmail.setValue(email);
		inputTelefono.setValue(telefono);
		inputInstitucion.setValue(institucion);
		inputObservaciones.setValue(observaciones);
		inputTema.setValue(tema);
		
		inputSoy.setContainerDataSource(Contenedor.obtenerContenedorTipoUsuario("tipoSoy"));
		inputTipoConsulta.setContainerDataSource(Contenedor.obtenerContenedorTipoConsulta("tipoConsulta"));
		
		inputSoy.select(tipoUsuario);
		inputTipoConsulta.select(tipoConsulta);
		
		String[] bases = setSelectedDataBases(basesDatos);
		for(String base : bases)
		{
			switch(base)
			{
				case "CRIJA":
					checkBoxCRIJA.setValue(true);
					checkBoxCRIJA.setEnabled(false);
					break;
				case "CIJUL":
					checkBoxCIJUL.setValue(true);
					checkBoxCIJUL.setEnabled(false);
					break;
				case "MASTERLEX":
					checkBoxMASTERLEX.setValue(true);
					checkBoxMASTERLEX.setEnabled(false);
					break;
				case "OPAC":
					checkBoxOPAC.setValue(true);
					checkBoxOPAC.setEnabled(false);
					break;
				case "SCIJ":
					checkBoxSCIJ.setValue(true);
					checkBoxSCIJ.setEnabled(false);
					break;
				case "DIALNET":
					checkBoxDIALNET.setValue(true);
					checkBoxDIALNET.setEnabled(false);
					break;
				case "OTRAS":
					checkBoxOTRAS.setValue(true);
					checkBoxOTRAS.setEnabled(false);
					break;
				
			}
		}
		
		inputFechaEmision.setEnabled(false);
		inputNombre.setEnabled(false);
		inputApellidos.setEnabled(false);
		inputCarne.setEnabled(false);
		inputCedula.setEnabled(false);
		inputEmail.setEnabled(false);
		inputTelefono.setEnabled(false);
		inputInstitucion.setEnabled(false);
		inputSoy.setEnabled(false);
		System.out.println("ID: " + IDConsulta);
		
		botonGuardar.addClickListener(new ClickListener()
		{
			private static final long serialVersionUID = 47254532L;
			@Override
			public void buttonClick(ClickEvent event)
			{
				
				String fechaEntrega;
				String tipoConsulta;
				String tema;
				String observaciones;
				
				//fechaEntrega = timeStamp;
				tipoConsulta = inputTipoConsulta.getValue().toString();
				tema = inputTema.getValue();
				observaciones = inputObservaciones.getValue();
				
				if(true)
				{
					
					try{
						if(checkBoxConsultaCompletada.getValue())
						{
							fechaEntrega = (new SimpleDateFormat("YYYY-MM-dd HH:mm").format(Calendar.getInstance().getTime()));
							dbc.update("Consulta","tema='"+tema+"', fechaEntrega='"+fechaEntrega+"', observaciones='"+observaciones+"', tipo='"+tipoConsulta+"'","id='"+IDConsulta+"'");
							
						}
						else
						{
							dbc.update("Consulta","tema='"+tema+"', observaciones='"+observaciones+"', tipo='"+tipoConsulta+"'","id='"+IDConsulta+"'");
							
						}
						
						//System.out.println("Consulta modificada: " + Integer.toString(idConsulta) +" " + tema +" " + fechaEntrega+" " + observaciones+" " + cedula+" " + tipoConsulta);
						if(checkBoxCRIJA.getValue() && checkBoxCRIJA.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(1) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(1),IDConsulta);
						}
						if(checkBoxCIJUL.getValue() && checkBoxCIJUL.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(2) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(2),IDConsulta);
						}
						if(checkBoxMASTERLEX.getValue() && checkBoxMASTERLEX.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(3) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(3),IDConsulta);
						}
						if(checkBoxOPAC.getValue() && checkBoxOPAC.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(4) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(4),IDConsulta);
						}
						if(checkBoxSCIJ.getValue() && checkBoxSCIJ.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(5) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(5),IDConsulta);
						}
						if(checkBoxDIALNET.getValue() && checkBoxDIALNET.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(6) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(6),IDConsulta);
						}
						if(checkBoxOTRAS.getValue() && checkBoxOTRAS.isEnabled())
						{
							//System.out.println("Id Base de datos: " + Integer.toString(7) + " Id Consulta: " + Integer.toString(idConsulta));
							dbc.insert("Consultabase",Integer.toString(7),IDConsulta);
						}
					}catch(Exception sqe){
					}
					
					System.out.println("Fila modificada.");
					UI.getCurrent().setContent(new formularioConsultaNoCompletada());
				}
			}
		});
		
		botonCancelar.addClickListener(new ClickListener()
		{
			private static final long serialVersionUID = 47254532L;
			@Override
			public void buttonClick(ClickEvent event)
			{
				//setValueDateField(inputFechaCaducidad, null);
				//checkBoxACEPTAR.setValue(false);
				//checkBoxRECHAZAR.setValue(false);
				//checkBoxDEVUELTO.setValue(false);
				UI.getCurrent().setContent(new formularioConsultaNoCompletada());
			}
	 	});
	}
	
	@Override
    public void enter(ViewChangeEvent event) {
        Notification.show("Formulario de editar consulta.");
    }
	

	private String[] setSelectedDataBases(String basesDatos)
	{
		String[] bases = basesDatos.split(",");
		
		return bases;
	}
	
	

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("695px");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("695px");
		
		// labelTitulo
		labelTitulo = new Label();
		labelTitulo.setImmediate(false);
		labelTitulo.setWidth("-1px");
		labelTitulo.setHeight("-1px");
		labelTitulo.setValue("EDITAR CONSULTA");
		mainLayout.addComponent(labelTitulo, "top:20.0px;left:290.0px;");
		
		// inputNombre
		inputNombre = new TextField();
		inputNombre.setImmediate(false);
		inputNombre.setWidth("-1px");
		inputNombre.setHeight("-1px");
		mainLayout.addComponent(inputNombre, "top:200.0px;left:120.0px;");
		
		// labelNombre
		labelNombre = new Label();
		labelNombre.setImmediate(false);
		labelNombre.setWidth("-1px");
		labelNombre.setHeight("-1px");
		labelNombre.setValue("Nombre:");
		mainLayout.addComponent(labelNombre, "top:200.0px;left:34.0px;");
		
		// labelApellidos
		labelApellidos = new Label();
		labelApellidos.setImmediate(false);
		labelApellidos.setWidth("-1px");
		labelApellidos.setHeight("-1px");
		labelApellidos.setValue("Apellidos:");
		mainLayout.addComponent(labelApellidos, "top:200.0px;left:330.0px;");
		
		// labelTelefono
		labelTelefono = new Label();
		labelTelefono.setImmediate(false);
		labelTelefono.setWidth("-1px");
		labelTelefono.setHeight("-1px");
		labelTelefono.setValue("Telefono:");
		mainLayout.addComponent(labelTelefono, "top:320.0px;left:330.0px;");
		
		// inputApellidos
		inputApellidos = new TextField();
		inputApellidos.setImmediate(false);
		inputApellidos.setWidth("-1px");
		inputApellidos.setHeight("-1px");
		mainLayout.addComponent(inputApellidos, "top:200.0px;left:420.0px;");
		
		// labelCedula
		labelCedula = new Label();
		labelCedula.setImmediate(false);
		labelCedula.setWidth("-1px");
		labelCedula.setHeight("-1px");
		labelCedula.setValue("Cédula:");
		mainLayout.addComponent(labelCedula, "top:142.0px;left:39.0px;");
		
		// inputCedula
		inputCedula = new TextField();
		inputCedula.setImmediate(false);
		inputCedula.setWidth("-1px");
		inputCedula.setHeight("-1px");
		mainLayout.addComponent(inputCedula, "top:136.0px;left:120.0px;");
		
		// labelCarne
		labelCarne = new Label();
		labelCarne.setImmediate(false);
		labelCarne.setWidth("-1px");
		labelCarne.setHeight("-1px");
		labelCarne.setValue("Carné:");
		mainLayout.addComponent(labelCarne, "top:142.0px;left:344.0px;");
		
		// labelTipoConsulta
		labelTipoConsulta = new Label();
		labelTipoConsulta.setImmediate(false);
		labelTipoConsulta.setWidth("-1px");
		labelTipoConsulta.setHeight("-1px");
		labelTipoConsulta.setValue("Tipo de consulta:");
		mainLayout.addComponent(labelTipoConsulta, "top:560.0px;left:328.0px;");
		
		// inputCarne
		inputCarne = new TextField();
		inputCarne.setImmediate(false);
		inputCarne.setWidth("-1px");
		inputCarne.setHeight("-1px");
		mainLayout.addComponent(inputCarne, "top:136.0px;left:419.0px;");
		
		// inputTelefono
		inputTelefono = new TextField();
		inputTelefono.setImmediate(false);
		inputTelefono.setWidth("-1px");
		inputTelefono.setHeight("-1px");
		mainLayout.addComponent(inputTelefono, "top:320.0px;left:420.0px;");
		
		// inputSoy
		inputSoy = new ComboBox();
		inputSoy.setImmediate(false);
		inputSoy.setWidth("141px");
		inputSoy.setHeight("-1px");
		mainLayout.addComponent(inputSoy, "top:320.0px;left:120.0px;");
		
		// inputTipoConsulta
		inputTipoConsulta = new ComboBox();
		inputTipoConsulta.setImmediate(false);
		inputTipoConsulta.setWidth("141px");
		inputTipoConsulta.setHeight("-1px");
		mainLayout.addComponent(inputTipoConsulta, "top:560.0px;left:460.0px;");
		
		// labelInstitucion
		labelInstitucion = new Label();
		labelInstitucion.setImmediate(false);
		labelInstitucion.setWidth("-1px");
		labelInstitucion.setHeight("-1px");
		labelInstitucion.setValue("Institucion:");
		mainLayout.addComponent(labelInstitucion, "top:260.0px;left:323.0px;");
		
		// inputInstitucion
		inputInstitucion = new TextField();
		inputInstitucion.setImmediate(false);
		inputInstitucion.setWidth("-1px");
		inputInstitucion.setHeight("-1px");
		mainLayout.addComponent(inputInstitucion, "top:260.0px;left:419.0px;");
		
		// inputEmail
		inputEmail = new TextField();
		inputEmail.setImmediate(false);
		inputEmail.setWidth("-1px");
		inputEmail.setHeight("-1px");
		mainLayout.addComponent(inputEmail, "top:260.0px;left:120.0px;");
		
		// labelEMail
		labelEMail = new Label();
		labelEMail.setImmediate(false);
		labelEMail.setWidth("-1px");
		labelEMail.setHeight("-1px");
		labelEMail.setValue("E-mail:");
		mainLayout.addComponent(labelEMail, "top:260.0px;left:44.0px;");
		
		// labelFechaHora
		labelFechaHora = new Label();
		labelFechaHora.setImmediate(false);
		labelFechaHora.setWidth("-1px");
		labelFechaHora.setHeight("-1px");
		labelFechaHora.setValue("1/6/2016  14:21");
		mainLayout.addComponent(labelFechaHora, "top:82.0px;left:480.0px;");
		
		// botonGuardar
		botonGuardar = new Button();
		botonGuardar.setCaption("EDITAR CONSULTA");
		botonGuardar.setImmediate(true);
		botonGuardar.setWidth("240px");
		botonGuardar.setHeight("40px");
		mainLayout.addComponent(botonGuardar, "top:638.0px;left:120.0px;");
		
		// labelSoy
		labelSoy = new Label();
		labelSoy.setImmediate(false);
		labelSoy.setWidth("-1px");
		labelSoy.setHeight("-1px");
		labelSoy.setValue("Tipo Usuario:");
		mainLayout.addComponent(labelSoy, "top:320.0px;left:9.0px;");
		
		// labelObservaciones
		labelObservaciones = new Label();
		labelObservaciones.setImmediate(false);
		labelObservaciones.setWidth("-1px");
		labelObservaciones.setHeight("-1px");
		labelObservaciones.setValue("Observaciones:");
		mainLayout.addComponent(labelObservaciones, "top:520.0px;left:-3.0px;");
		
		// inputObservaciones
		inputObservaciones = new TextField();
		inputObservaciones.setImmediate(false);
		inputObservaciones.setWidth("480px");
		inputObservaciones.setHeight("-1px");
		mainLayout.addComponent(inputObservaciones, "top:518.0px;left:120.0px;");
		
		// labelFechaEntrega
		labelFechaEntrega = new Label();
		labelFechaEntrega.setImmediate(false);
		labelFechaEntrega.setWidth("-1px");
		labelFechaEntrega.setHeight("-1px");
		labelFechaEntrega.setValue("(la consulta ya no podrá ser editada)");
		mainLayout.addComponent(labelFechaEntrega, "top:580.0px;left:46.0px;");
		
		// labelTema
		labelTema = new Label();
		labelTema.setImmediate(false);
		labelTema.setWidth("-1px");
		labelTema.setHeight("-1px");
		labelTema.setValue("Tema:");
		mainLayout.addComponent(labelTema, "top:376.0px;left:46.0px;");
		
		// labelBasesDatos
		labelBasesDatos = new Label();
		labelBasesDatos.setImmediate(false);
		labelBasesDatos.setWidth("-1px");
		labelBasesDatos.setHeight("-1px");
		labelBasesDatos.setValue("Bases de Datos consultadas:");
		mainLayout.addComponent(labelBasesDatos, "top:420.0px;left:264.0px;");
		
		// inputTema
		inputTema = new TextField();
		inputTema.setImmediate(false);
		inputTema.setWidth("480px");
		inputTema.setHeight("-1px");
		mainLayout.addComponent(inputTema, "top:374.0px;left:120.0px;");
		
		// checkBoxCRIJA
		checkBoxCRIJA = new CheckBox();
		checkBoxCRIJA.setCaption("CRIJA");
		checkBoxCRIJA.setImmediate(false);
		checkBoxCRIJA.setWidth("-1px");
		checkBoxCRIJA.setHeight("-1px");
		mainLayout.addComponent(checkBoxCRIJA, "top:459.0px;left:46.0px;");
		
		// checkBoxCIJUL
		checkBoxCIJUL = new CheckBox();
		checkBoxCIJUL.setCaption("CIJUL");
		checkBoxCIJUL.setImmediate(false);
		checkBoxCIJUL.setWidth("-1px");
		checkBoxCIJUL.setHeight("-1px");
		mainLayout.addComponent(checkBoxCIJUL, "top:459.0px;left:128.0px;");
		
		// checkBoxMASTERLEX
		checkBoxMASTERLEX = new CheckBox();
		checkBoxMASTERLEX.setCaption("MASTERLEX");
		checkBoxMASTERLEX.setImmediate(false);
		checkBoxMASTERLEX.setWidth("-1px");
		checkBoxMASTERLEX.setHeight("-1px");
		mainLayout.addComponent(checkBoxMASTERLEX, "top:459.0px;left:200.0px;");
		
		// checkBoxOPAC
		checkBoxOPAC = new CheckBox();
		checkBoxOPAC.setCaption("OPAC");
		checkBoxOPAC.setImmediate(false);
		checkBoxOPAC.setWidth("-1px");
		checkBoxOPAC.setHeight("-1px");
		mainLayout.addComponent(checkBoxOPAC, "top:459.0px;left:320.0px;");
		
		// checkBoxSCIJ
		checkBoxSCIJ = new CheckBox();
		checkBoxSCIJ.setCaption("SCIJ");
		checkBoxSCIJ.setImmediate(false);
		checkBoxSCIJ.setWidth("-1px");
		checkBoxSCIJ.setHeight("-1px");
		mainLayout.addComponent(checkBoxSCIJ, "top:459.0px;left:400.0px;");
		
		// checkBoxDIALNET
		checkBoxDIALNET = new CheckBox();
		checkBoxDIALNET.setCaption("DIALNET");
		checkBoxDIALNET.setImmediate(false);
		checkBoxDIALNET.setWidth("-1px");
		checkBoxDIALNET.setHeight("-1px");
		mainLayout.addComponent(checkBoxDIALNET, "top:459.0px;left:460.0px;");
		
		// checkBoxOTRAS
		checkBoxOTRAS = new CheckBox();
		checkBoxOTRAS.setCaption("OTRAS");
		checkBoxOTRAS.setImmediate(false);
		checkBoxOTRAS.setWidth("-1px");
		checkBoxOTRAS.setHeight("-1px");
		mainLayout.addComponent(checkBoxOTRAS, "top:459.0px;left:560.0px;");
		
		// labelFechaEmision
		labelFechaEmision = new Label();
		labelFechaEmision.setImmediate(false);
		labelFechaEmision.setWidth("-1px");
		labelFechaEmision.setHeight("-1px");
		labelFechaEmision.setValue("Fecha emisión:");
		mainLayout.addComponent(labelFechaEmision, "top:82.0px;left:-1.0px;");
		
		// inputFechaEmision
		inputFechaEmision = new TextField();
		inputFechaEmision.setImmediate(false);
		inputFechaEmision.setWidth("-1px");
		inputFechaEmision.setHeight("-1px");
		mainLayout.addComponent(inputFechaEmision, "top:76.0px;left:120.0px;");
		
		// checkBoxConsultaCompletada
		checkBoxConsultaCompletada = new CheckBox();
		checkBoxConsultaCompletada.setCaption("Marcar como consulta completada");
		checkBoxConsultaCompletada.setImmediate(false);
		checkBoxConsultaCompletada.setWidth("-1px");
		checkBoxConsultaCompletada.setHeight("-1px");
		mainLayout.addComponent(checkBoxConsultaCompletada, "top:559.0px;left:40.0px;");
		
		// botonCancelar
		botonCancelar = new Button();
		botonCancelar.setCaption("CANCELAR");
		botonCancelar.setImmediate(true);
		botonCancelar.setWidth("160px");
		botonCancelar.setHeight("40px");
		mainLayout.addComponent(botonCancelar, "top:638.0px;left:440.0px;");
		
		return mainLayout;
	}

}
