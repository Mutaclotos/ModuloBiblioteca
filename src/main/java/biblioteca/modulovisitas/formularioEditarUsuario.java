package biblioteca.modulovisitas;

import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.FieldEvents.FocusEvent;
import com.vaadin.event.FieldEvents.FocusListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;

import biblioteca.modulovisitas.validadores.IsApellido;
import biblioteca.modulovisitas.validadores.IsCarne;
import biblioteca.modulovisitas.validadores.IsCedula;
import biblioteca.modulovisitas.validadores.IsClave;
import biblioteca.modulovisitas.validadores.IsClaveAdmin;
import biblioteca.modulovisitas.validadores.IsEmail;
import biblioteca.modulovisitas.validadores.IsInstitucion;
import biblioteca.modulovisitas.validadores.IsNombre;
import biblioteca.modulovisitas.validadores.IsTelefono;

public class formularioEditarUsuario extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label labelClave2;

	@AutoGenerated
	private Label labelClave1;

	@AutoGenerated
	private PasswordField textFieldClave2;

	@AutoGenerated
	private PasswordField textFieldClave1;

	@AutoGenerated
	private Button botonCancelar;

	@AutoGenerated
	private Label labelUsuario;

	@AutoGenerated
	private Button botonGuardar;

	@AutoGenerated
	private Label labelFechaHora;

	@AutoGenerated
	private Label labelEMail;

	@AutoGenerated
	private TextField inputEmail;

	@AutoGenerated
	private TextField inputInstitucion;

	@AutoGenerated
	private Label labelInstitucion;

	@AutoGenerated
	private ComboBox inputSoy;

	@AutoGenerated
	private TextField inputTelefono;

	@AutoGenerated
	private TextField inputCarne;

	@AutoGenerated
	private Label labelCarne;

	@AutoGenerated
	private TextField inputCedula;

	@AutoGenerated
	private Label labelCedula;

	@AutoGenerated
	private TextField inputApellidos;

	@AutoGenerated
	private Label labelTelefono;

	@AutoGenerated
	private Label labelApellidos;

	@AutoGenerated
	private Label labelNombre;

	@AutoGenerated
	private TextField inputNombre;

	@AutoGenerated
	private Label labelTitulo;

	public static final long serialVersionUID = 1202;
	
	private String timeStamp;

	private final DBConnector dbc;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	MyUI m;
	
	public formularioEditarUsuario(MyUI main) 
	{
		this.m = main;
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		dbc = new DBConnector(MyUI.address,MyUI.user,MyUI.password);

		timeStamp = new SimpleDateFormat("dd/MM/YYYY HH:mm").format(Calendar.getInstance().getTime());
		labelFechaHora.setValue(timeStamp);
		
	
		FocusListener fl = new FocusListener(){
			@Override
			public void focus(FocusEvent event) {
				inputApellidos.isValid();	
				inputEmail.isValid();
				inputTelefono.isValid();
				inputInstitucion.isValid();
				inputNombre.isValid();
				textFieldClave1.isValid();
				textFieldClave2.isValid();
			}
		};
		
		inputApellidos.addFocusListener(fl);
		inputEmail.addFocusListener(fl);
		inputTelefono.addFocusListener(fl);
		inputInstitucion.addFocusListener(fl);
		inputNombre.addFocusListener(fl);
		textFieldClave1.addFocusListener(fl);
		textFieldClave2.addFocusListener(fl);
		botonGuardar.addFocusListener(fl);
		
		
		inputSoy.setContainerDataSource(Contenedor.obtenerContenedorTipoUsuario("tipoSoy"));
		
		botonGuardar.addClickListener(new ClickListener(){
			private static final long serialVersionUID = 47254532L;
			@Override
			public void buttonClick(ClickEvent event) {
				
				inputApellidos.addValidator(new IsApellido());
				inputEmail.addValidator(new IsEmail());
				inputTelefono.addValidator(new IsTelefono());
				inputInstitucion.addValidator(new IsInstitucion());
				inputNombre.addValidator(new IsNombre());
				textFieldClave1.addValidator(new IsClaveAdmin());
				textFieldClave2.addValidator(new IsClaveAdmin());
				
				String apellidos;
				String email;
				String telefono;
				String institucion;
				String nombre;
				String tipoUsuario;
				String clave;

				boolean noError = (inputApellidos.isValid() && inputCarne.isValid() && inputCedula.isValid()
						&& inputEmail.isValid() && inputTelefono.isValid()
						&& inputInstitucion.isValid() && inputNombre.isValid() && textFieldClave1.isValid() && textFieldClave2.isValid());
				if(noError){
					apellidos = inputApellidos.getValue();
					email = inputEmail.getValue();
					telefono = inputTelefono.getValue();
					institucion = inputInstitucion.getValue();
					nombre = inputNombre.getValue();
					tipoUsuario = inputSoy.getValue().toString();
					clave = textFieldClave1.getValue().toString();
					
					ResultSet rs = dbc.query("SELECT 1 FROM Usuario WHERE clave='"+clave+"'");
					try{
						if(!rs.next()){//Si no exiten regitros con esta cedula
							System.out.println("Insertando nuevo usuario.");
							dbc.insert("Usuario",apellidos,nombre,email,institucion,tipoUsuario);
						}
					}catch(Exception sqe){
					}
					
					inputApellidos.setValue("");
					inputCarne.setValue("");
					inputCedula.setValue("");
					inputEmail.setValue("");
					inputTelefono.setValue("");
					inputInstitucion.setValue("");
					inputNombre.setValue("");
					
					
					m.usuarioNormal();
				}
			}
		});
		
		botonCancelar.addClickListener(new ClickListener()
		{
			private static final long serialVersionUID = 47254532L;
			@Override
			public void buttonClick(ClickEvent event)
			{
				inputApellidos.setValue("");
				inputCarne.setValue("");
				inputCedula.setValue("");
				inputEmail.setValue("");
				inputTelefono.setValue("");
				inputInstitucion.setValue("");
				inputNombre.setValue("");
				
				MyUI.tabsheet.replaceComponent(MyUI.tabsheet.getSelectedTab(), new formularioConsultaNoCompletada());
			}
	 	});
		
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("646px");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("646px");
		
		// labelTitulo
		labelTitulo = new Label();
		labelTitulo.setImmediate(false);
		labelTitulo.setWidth("-1px");
		labelTitulo.setHeight("-1px");
		labelTitulo.setValue("NUEVA CONSULTA");
		mainLayout.addComponent(labelTitulo, "top:0.0px;left:290.0px;");
		
		// inputNombre
		inputNombre = new TextField();
		inputNombre.setImmediate(false);
		inputNombre.setWidth("-1px");
		inputNombre.setHeight("-1px");
		mainLayout.addComponent(inputNombre, "top:116.0px;left:120.0px;");
		
		// labelNombre
		labelNombre = new Label();
		labelNombre.setImmediate(false);
		labelNombre.setWidth("-1px");
		labelNombre.setHeight("-1px");
		labelNombre.setValue("Nombre:");
		mainLayout.addComponent(labelNombre, "top:120.0px;left:34.0px;");
		
		// labelApellidos
		labelApellidos = new Label();
		labelApellidos.setImmediate(false);
		labelApellidos.setWidth("-1px");
		labelApellidos.setHeight("-1px");
		labelApellidos.setValue("Apellidos:");
		mainLayout.addComponent(labelApellidos, "top:120.0px;left:368.0px;");
		
		// labelTelefono
		labelTelefono = new Label();
		labelTelefono.setImmediate(false);
		labelTelefono.setWidth("-1px");
		labelTelefono.setHeight("-1px");
		labelTelefono.setValue("Telefono:");
		mainLayout.addComponent(labelTelefono, "top:240.0px;left:370.0px;");
		
		// inputApellidos
		inputApellidos = new TextField();
		inputApellidos.setImmediate(false);
		inputApellidos.setWidth("-1px");
		inputApellidos.setHeight("-1px");
		mainLayout.addComponent(inputApellidos, "top:116.0px;left:459.0px;");
		
		// labelCedula
		labelCedula = new Label();
		labelCedula.setImmediate(false);
		labelCedula.setWidth("-1px");
		labelCedula.setHeight("-1px");
		labelCedula.setValue("Cédula:");
		mainLayout.addComponent(labelCedula, "top:60.0px;left:39.0px;");
		
		// inputCedula
		inputCedula = new TextField();
		inputCedula.setImmediate(false);
		inputCedula.setWidth("-1px");
		inputCedula.setHeight("-1px");
		mainLayout.addComponent(inputCedula, "top:60.0px;left:120.0px;");
		
		// labelCarne
		labelCarne = new Label();
		labelCarne.setImmediate(false);
		labelCarne.setWidth("-1px");
		labelCarne.setHeight("-1px");
		labelCarne.setValue("Carné:");
		mainLayout.addComponent(labelCarne, "top:60.0px;left:384.0px;");
		
		// inputCarne
		inputCarne = new TextField();
		inputCarne.setImmediate(false);
		inputCarne.setWidth("-1px");
		inputCarne.setHeight("-1px");
		mainLayout.addComponent(inputCarne, "top:60.0px;left:459.0px;");
		
		// inputTelefono
		inputTelefono = new TextField();
		inputTelefono.setImmediate(false);
		inputTelefono.setWidth("-1px");
		inputTelefono.setHeight("-1px");
		mainLayout.addComponent(inputTelefono, "top:236.0px;left:459.0px;");
		
		// inputSoy
		inputSoy = new ComboBox();
		inputSoy.setImmediate(false);
		inputSoy.setWidth("141px");
		inputSoy.setHeight("-1px");
		mainLayout.addComponent(inputSoy, "top:240.0px;left:120.0px;");
		
		// labelInstitucion
		labelInstitucion = new Label();
		labelInstitucion.setImmediate(false);
		labelInstitucion.setWidth("-1px");
		labelInstitucion.setHeight("-1px");
		labelInstitucion.setValue("Institucion:");
		mainLayout.addComponent(labelInstitucion, "top:180.0px;left:363.0px;");
		
		// inputInstitucion
		inputInstitucion = new TextField();
		inputInstitucion.setImmediate(false);
		inputInstitucion.setWidth("-1px");
		inputInstitucion.setHeight("-1px");
		mainLayout.addComponent(inputInstitucion, "top:176.0px;left:459.0px;");
		
		// inputEmail
		inputEmail = new TextField();
		inputEmail.setImmediate(false);
		inputEmail.setWidth("-1px");
		inputEmail.setHeight("-1px");
		mainLayout.addComponent(inputEmail, "top:176.0px;left:120.0px;");
		
		// labelEMail
		labelEMail = new Label();
		labelEMail.setImmediate(false);
		labelEMail.setWidth("-1px");
		labelEMail.setHeight("-1px");
		labelEMail.setValue("E-mail:");
		mainLayout.addComponent(labelEMail, "top:180.0px;left:43.0px;");
		
		// labelFechaHora
		labelFechaHora = new Label();
		labelFechaHora.setImmediate(false);
		labelFechaHora.setWidth("-1px");
		labelFechaHora.setHeight("-1px");
		labelFechaHora.setValue("1/6/2016  14:21");
		mainLayout.addComponent(labelFechaHora, "top:20.0px;left:480.0px;");
		
		// botonGuardar
		botonGuardar = new Button();
		botonGuardar.setCaption("ACEPTAR CAMBIOS");
		botonGuardar.setImmediate(true);
		botonGuardar.setWidth("240px");
		botonGuardar.setHeight("40px");
		mainLayout.addComponent(botonGuardar, "top:579.0px;left:180.0px;");
		
		// labelUsuario
		labelUsuario = new Label();
		labelUsuario.setImmediate(false);
		labelUsuario.setWidth("-1px");
		labelUsuario.setHeight("-1px");
		labelUsuario.setValue("Usuario:");
		mainLayout.addComponent(labelUsuario, "top:240.0px;left:35.0px;");
		
		// botonCancelar
		botonCancelar = new Button();
		botonCancelar.setCaption("CANCELAR");
		botonCancelar.setImmediate(true);
		botonCancelar.setWidth("140px");
		botonCancelar.setHeight("40px");
		mainLayout.addComponent(botonCancelar, "top:579.0px;left:500.0px;");
		
		// textFieldClave1
		textFieldClave1 = new PasswordField();
		textFieldClave1.setImmediate(false);
		textFieldClave1.setWidth("-1px");
		textFieldClave1.setHeight("-1px");
		mainLayout.addComponent(textFieldClave1, "top:320.0px;left:279.0px;");
		
		// textFieldClave2
		textFieldClave2 = new PasswordField();
		textFieldClave2.setImmediate(false);
		textFieldClave2.setWidth("-1px");
		textFieldClave2.setHeight("-1px");
		mainLayout.addComponent(textFieldClave2, "top:380.0px;left:279.0px;");
		
		// labelClave1
		labelClave1 = new Label();
		labelClave1.setImmediate(false);
		labelClave1.setWidth("-1px");
		labelClave1.setHeight("-1px");
		labelClave1.setValue("Nueva contraseña:");
		mainLayout.addComponent(labelClave1, "top:320.0px;left:140.0px;");
		
		// labelClave2
		labelClave2 = new Label();
		labelClave2.setImmediate(false);
		labelClave2.setWidth("-1px");
		labelClave2.setHeight("-1px");
		labelClave2.setValue("Escribir nueva contraseña de nuevo:");
		mainLayout.addComponent(labelClave2, "top:380.0px;left:46.0px;");
		
		return mainLayout;
	}

}
